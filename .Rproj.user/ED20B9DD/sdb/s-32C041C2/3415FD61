{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\n#library(datasets)\nlibrary(MASS)\nlibrary(rCharts)\n\nmydata <- Cars93\n\nshinyServer(function(input, output, session) {\n  \n  output$oManufacturer <- renderPrint({input$Manufacturer2})\n  \n  output$mytable = renderDataTable({\n    MANUFACTURER = input$Manufacturer2\n    TYPE = input$Type2\n    mydata<- mydata[mydata$Manufacturer %in% MANUFACTURER  & mydata$Type %in% TYPE,]\n    mydata<-mydata[,c(\"Manufacturer\",\"Type\",\"Model\",\"Weight\", \"Price\")]\n    mydata\n  })\n  \n  output$myplot<- renderChart2({\n    MANUFACTURER = input$Manufacturer2\n    TYPE = input$Type2\n    mydata<- mydata[mydata$Manufacturer %in% MANUFACTURER  & mydata$Type %in% TYPE,]\n    p1<-rPlot(Weight ~ Model, color = 'Model', data = mydata, type = 'bar')\n    \n    p1$guides(\n      color = list(\n        numticks = length(factor(mydata$Model))\n      ),\n      y = list(\n        min = 0,\n        max = 10\n      )\n    )\n    return(p1)\n  })  \n  \n  output$myprice <- renderPlot({\n    plot(Cars93$Manufacturer,Cars93$Price,col=2,cex=2,pch=3)\n  })\n\n  \n  output$myfactors <- renderPlot({\n    Cars93_MPG <- Cars93[,c(\"Price\", \"MPG.highway\", \"EngineSize\", \"Weight\", \"Length\")]\n    plot(Cars93_MPG, main=\"Scatter Plot Matrix\")\n  })\n  \n    \n#   output$myprice<- renderChart2({\n#     Trial <- summaryBy(.~Price,data=Cars93,FUN=length)\n#     Histogram1 <- nPlot(x='Age',y='X.length',group='Sex',data=Trial,type='bar',dom='Histogram1')\n#     Histogram1$chart(margin = list(left = 100))\n#     return(Histogram1)\n#     \n# \n#   })    \n  \n})\n\n# mpgData <- mtcars\n# mpgData$am <- factor(mpgData$am, labels = c(\"Automatic\", \"Manual\"))\n# \n# shinyServer(function(input, output) {\n# \n#   output$distPlot <- renderPlot({\n# \n#     # generate bins based on input$bins from ui.R\n#     x    <- faithful[, 2]\n#     bins <- seq(min(x), max(x), length.out = input$bins + 1)\n# \n#     # draw the histogram with the specified number of bins\n#     hist(x, breaks = bins, col = 'darkgray', border = 'white')\n# \n#   })\n# \n# })\n",
    "created" : 1455457929835.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "388481088",
    "id" : "3415FD61",
    "lastKnownWriteTime" : 1455455444,
    "path" : "C:/.apps/c.coursera.dsc.09_DataProds/week04/coursera_dsc_09_dataprods_project/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}